////////////////////////////////////////////////////////////////////////////////
#ifndef ERROR_HPP
#define ERROR_HPP

////////////////////////////////////////////////////////////////////////////////
#include <QString>
#include <utility>

////////////////////////////////////////////////////////////////////////////////
class Error
{
public:
    Error(QString message) : _message(std::move(message)) { }
    ~Error() { }

    virtual const QString& message() const noexcept { return _message; }

protected:
    QString _message;
};

////////////////////////////////////////////////////////////////////////////////
class InvalidError: public Error
{
public:
    using Error::Error;
};

////////////////////////////////////////////////////////////////////////////////
class XmlError : public Error
{
public:
    using Error::Error;
};

////////////////////////////////////////////////////////////////////////////////
#endif // ERROR_HPP
